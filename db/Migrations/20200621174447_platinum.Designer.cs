// <auto-generated />
using System;
using Gta5Platinum.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gta5Platinum.DataAccess.Migrations
{
    [DbContext(typeof(Gta5PlatinumDbContext))]
    [Migration("20200621174447_platinum")]
    partial class platinum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("DonateBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ip")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsHelper")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsModerator")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Serial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<ulong>("SocialClubId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DonateBalance = 0m,
                            Email = "mail@mail.com",
                            Ip = "127.0.0.1",
                            IsAdmin = false,
                            IsHelper = false,
                            IsModerator = false,
                            Login = "firstlog",
                            Password = "firstpass",
                            Serial = "sdq2213sdddewe21213wsdas3d5f",
                            SocialClubId = 5184516684ul
                        });
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BulletproofTyres")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<bool>("CustomTires")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DashboardColor")
                        .HasColumnType("int");

                    b.Property<float>("EnginePowerMultiplier")
                        .HasColumnType("float");

                    b.Property<bool>("EngineStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("EngineTorqueMultiplier")
                        .HasColumnType("float");

                    b.Property<float>("Health")
                        .HasColumnType("float");

                    b.Property<int>("Livery")
                        .HasColumnType("int");

                    b.Property<bool>("Neons")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NumberPlate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumberPlateStyle")
                        .HasColumnType("int");

                    b.Property<int>("PearlescentColor")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryColor")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryColor")
                        .HasColumnType("int");

                    b.Property<bool>("SpecialLight")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TrimColor")
                        .HasColumnType("int");

                    b.Property<int>("WheelColor")
                        .HasColumnType("int");

                    b.Property<int>("WheelType")
                        .HasColumnType("int");

                    b.Property<int>("WindowTint")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Finance", b =>
                {
                    b.Property<Guid>("FinanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Bank")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("FinanceId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.InventoryItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("InventoryId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ItemId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("InventoryId1");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.UserVehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleCarId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("VehicleCarId");

                    b.ToTable("UserVehicles");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Character", b =>
                {
                    b.HasOne("Gta5Platinum.DataAccess.Account.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.Finance", b =>
                {
                    b.HasOne("Gta5Platinum.DataAccess.Account.UserModels.Character", null)
                        .WithOne("UserFinances")
                        .HasForeignKey("Gta5Platinum.DataAccess.Account.UserModels.Finance", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.InventoryItem", b =>
                {
                    b.HasOne("Gta5Platinum.DataAccess.Account.UserModels.Character", null)
                        .WithMany("CharacterInventory")
                        .HasForeignKey("CharacterId");

                    b.HasOne("Gta5Platinum.DataAccess.Account.UserModels.Inventory", null)
                        .WithMany("Items")
                        .HasForeignKey("InventoryId1");
                });

            modelBuilder.Entity("Gta5Platinum.DataAccess.Account.UserModels.UserVehicle", b =>
                {
                    b.HasOne("Gta5Platinum.DataAccess.Account.UserModels.Character", null)
                        .WithMany("UserVehicles")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gta5Platinum.DataAccess.Account.UserModels.Car", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleCarId");
                });
#pragma warning restore 612, 618
        }
    }
}
